@model StokvelManagementSystem.Models.Contribution
@{
    ViewData["Title"] = "MY CONTRIBUTION";
}

<div class="container mt-4">
    <div class="card shadow-sm border-0">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center py-3">
            <h7 class="mb-0"></h7>
                @ViewData["Title"]
                
            </h4>
            <div>
                <span class="badge bg-light text-dark fs-6">
                    <i class="bi bi-calendar me-2"></i>@DateTime.Now.ToString("dd MMMM yyyy")
                </span>
            </div> 
        </div>

        <div class="card-body">
            <form id="paymentForm" asp-action="ContributionsCreate" asp-route-groupId="@Model.GroupId" method="post" class="needs-validation" novalidate>
                <div asp-validation-summary="ModelOnly" class="alert alert-danger mb-4"></div>
                @Html.HiddenFor(m => m.MemberGroupID)
                <input type="hidden" name="groupId" value="@Model.GroupId" />


                <!-- Member Details (auto-filled) -->
                <div class="mb-4 p-3 border rounded bg-light">
                    <h5 class="mb-3 text-primary"><i class="bi bi-person-circle me-2"></i>Member</h5>
                    <div class="mb-2"><strong>Name:</strong> @Model.FullName </div>
                    <div class="mb-2"><strong>Phone:</strong> @Model.Phone</div>
                    <div><strong>Email:</strong> @Model.Email</div>
                </div>

                <!-- Group & Payment Details -->
                <div class="mb-4 p-3 border rounded bg-light">
                    <h5 class="mb-3 text-primary"><i class="bi bi-people-fill me-2"></i>Group & Payment</h5>
                    <div class="form-group mb-3">
                        <label class="form-label fw-bold">Group</label>
                        <input type="text" class="form-control" value="@Model.GroupName" readonly />
                    </div>
                    <div class="form-group mb-3">
                        <label class="form-label fw-bold">Due Date</label>
                        <input type="date" class="form-control" value="@(Model.DueDate?.ToString("yyyy-MM-dd"))" readonly />
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="PaymentMethodID" class="form-label fw-bold">Payment Method</label>
                        <select asp-for="PaymentMethodID" class="form-select" required asp-items="@(new SelectList(Model.PaymentMethods, "Id", "Method"))">
                            <option value="">-- Select --</option>
                        </select>
                    </div>
                    <div class="form-group mb-3">
                        <label for="AccountNumber" class="form-label fw-bold">Account Number</label>
                        <input id="AccountNumber" 
                            name="AccountNumber" 
                            class="form-control" 
                            type="text" 
                            pattern="\d{13,19}" 
                            title="Enter a valid account number (13–19 digits)" 
                            required>
                        <div id="accountError" class="text-danger mt-1"></div>
                    </div>

                </div>

                <!-- Contribution Summary -->
                <div class="mb-4 p-3 border rounded bg-light">
                    <h5 class="mb-3 text-primary"><i class="bi bi-cash me-2"></i>Contribution Summary</h5>
                    <div class="row">
                        <div class="col-md-4">
                            <label asp-for="ContributionAmount" class="form-label fw-bold">Contribution Amount</label>
                            <div class="input-group">
                                <span class="input-group-text">@Model.CurrencySymbol</span>
                                <input asp-for="ContributionAmount" class="form-control" type="number" readonly />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label asp-for="PenaltyAmount" class="form-label fw-bold">Penalty Amount</label>
                            <div class="input-group">
                                <span class="input-group-text">@Model.CurrencySymbol</span>
                                <input asp-for="PenaltyAmount" class="form-control" type="number" readonly />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label asp-for="TotalAmount" class="form-label fw-bold">Total Amount</label>
                            <div class="input-group">
                                <span class="input-group-text">@Model.CurrencySymbol</span>
                                <input asp-for="TotalAmount" class="form-control fw-bold text-success" type="number" readonly />
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Buttons -->
                <div class="d-flex justify-content-end gap-2 mt-3">
                    <a href="javascript:history.back()" class="btn btn-outline-secondary">
                        <i class="bi bi-x-circle me-2"></i>Cancel
                    </a>
                <button type="submit" class="btn btn-success px-4">
                    <span id="payNowText"><i class="bi bi-credit-card me-2"></i>Pay Now</span>
                    <span id="loadingSpinner" class="spinner-border spinner-border-sm d-none"></span>
                </button>

                </div>
            </form>

            <!-- Success Message -->
            <div id="paymentSuccess" class="alert alert-success mt-4 d-none">
                <h5><i class="bi bi-check-circle me-2"></i>Payment Made Successfully!</h5>
                <p>You can now download your receipt.</p>
                <a href="#" id="downloadReceiptBtn" class="btn btn-primary">
                    <i class="bi bi-download me-2"></i>Download Receipt
                </a>
            </div>
        </div>
    </div>
</div>


@section Scripts {
<script>

const accountInput = document.getElementById("AccountNumber");
const payNowButton = document.querySelector('button[type="submit"]');
const accountError = document.getElementById("accountError");

// Luhn check function
function isValidLuhn(number) {
    let sum = 0;
    let shouldDouble = false;
    for (let i = number.length - 1; i >= 0; i--) {
        let digit = parseInt(number[i]);
        if (shouldDouble) {
            digit *= 2;
            if (digit > 9) digit -= 9;
        }
        sum += digit;
        shouldDouble = !shouldDouble;
    }
    return sum % 10 === 0;
}

// Real-time validation
accountInput.addEventListener("input", () => {
    const value = accountInput.value.replace(/\s+/g, '');
    if (value.length >= 13 && value.length <= 19 && isValidLuhn(value)) {
        accountInput.setCustomValidity("");
        accountError.textContent = "";
        payNowButton.disabled = false; // Enable button if valid
    } else {
        accountInput.setCustomValidity("Invalid account number");
        accountError.textContent = "Invalid account number";
        payNowButton.disabled = true; // Disable button if invalid
    }
});

document.getElementById("payNowBtn").addEventListener("click", function () {
    const btn = this;
    const spinner = document.getElementById("loadingSpinner");
    const text = document.getElementById("payNowText");
    const successMsg = document.getElementById("paymentSuccess");

    spinner.classList.remove("d-none");
    text.textContent = "Processing...";

    setTimeout(() => {
        spinner.classList.add("d-none");
        btn.disabled = true;
        document.getElementById("paymentForm").classList.add("d-none");
        successMsg.classList.remove("d-none");
    }, 2000);
});

// Auto-fill phone/email on member select
document.getElementById("MemberDropdown").addEventListener("change", function () {
    const selected = this.options[this.selectedIndex];
    document.getElementById("Phone").textContent = selected.getAttribute("data-phone") || "";
    document.getElementById("Email").textContent = selected.getAttribute("data-email") || "";
});


// Download receipt
document.getElementById("downloadReceiptBtn").addEventListener("click", function (e) {
    e.preventDefault();

    const groupName = "@Model.GroupName";
    const memberName = "@Model.FirstName "; 
    const accountNo = document.getElementById("AccountNumber").value || "N/A";
    const date = new Date().toLocaleDateString();
    const contribution = "@Model.ContributionAmount";
    const penalty = "@Model.PenaltyAmount";
    const total = "@Model.TotalAmount";

    const receiptHTML = `
<html>
<head>
<title>Payment Receipt</title>
<link rel="stylesheet" href="receipt.css">
</head>
<body>
<div class="receipt-container">
    <div class="header">
        <h1>Payment Receipt</h1>
        <p>${date}</p>
    </div>
    <div class="section">
        <h2>Member & Group Details</h2>
        <table>
            <tr><th>Group Name</th><td>${groupName}</td></tr>
            <tr><th>Member Name</th><td>${memberName}</td></tr>
            <tr><th>Account Number</th><td>${accountNo}</td></tr>
            <tr><th>Date of Payment</th><td>${date}</td></tr>
        </table>
    </div>
    <div class="section">
        <h2>Payment Summary</h2>
        <table>
            <tr><th>Contribution</th><td>${contribution}</td></tr>
            <tr><th>Penalty</th><td>${penalty}</td></tr>
            <tr class="total-row"><td>Total Paid</td><td>${total}</td></tr>
        </table>
    </div>
    <div class="footer">Thank you for your payment. Please keep this receipt for your records.</div>
</div>
</body>
</html>
`;

    const blob = new Blob([receiptHTML], { type: "text/html" });
    const url = URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.href = url;
    link.download = `Receipt-${memberName.replace(/\s/g,'')}.html`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
});

</script>
}
