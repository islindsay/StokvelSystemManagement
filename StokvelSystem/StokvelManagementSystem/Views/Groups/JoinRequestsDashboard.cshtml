@model DashboardModel
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>@Model.Group.Name - Stokvel Management System</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" /> <!-- Fixed missing closing bracket -->
    <link rel="stylesheet" href="~/css/Sidebar.css" />
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="sidebar col-4">
                <div class="sidebar-header mb-4">
                    <h4>INFORMATION DASHBOARD</h4>
                </div>

                <!-- Member Count -->
                <h9 id="group-stats">Loading stats...</h9>

                <div class="progress mb-4">
                    <div class="progress-bar progress-bar-striped bg-success" style="width: 0%;" id="MemberLimit"></div>
                </div>

                <!-- Join Requests -->
                <div class="mb-2">
                    <button class="btn btn-primary btn-toggle" type="button" data-bs-toggle="collapse" data-bs-target="#joinRequestsCollapse" aria-expanded="false" aria-controls="joinRequestsCollapse">
                        Join Requests 
                        <i class="fas fa-chevron-down collapse-toggle"></i>
                    </button>
                    <div class="collapse mt-1" id="joinRequestsCollapse">
                        <div class="list-group list-group-flush">
                           <a class="list-group-item @(Model.SelectedStatus == "Pending" && Model.RequestType == "Join" ? "active" : "")"
                               asp-action="JoinRequestsDashboard"
                               asp-route-status="Pending"
                               asp-route-groupId="@Model.Group.ID">
                               <i class="fas fa-clock me-2"></i> Pending
                            </a>
                            <a class="list-group-item @(Model.SelectedStatus == "Accepted" && Model.RequestType == "Join" ? "active" : "")"
                               asp-action="JoinRequestsDashboard"
                               asp-route-status="Accepted"
                               asp-route-groupId="@Model.Group.ID">
                                <i class="fas fa-check-circle me-2"></i> Accepted
                            </a>
                            <a class="list-group-item @(Model.SelectedStatus == "Rejected" && Model.RequestType == "Join" ? "active" : "")"
                               asp-action="JoinRequestsDashboard"
                               asp-route-status="Rejected"
                               asp-route-groupId="@Model.Group.ID">
                                <i class="fas fa-times-circle me-2"></i> Rejected
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Group Settings -->
                <div class="mb-2">
                    <button class="btn btn-primary btn-toggle" type="button" data-bs-toggle="collapse" data-bs-target="#groupSettingsCollapse" aria-expanded="false" aria-controls="groupSettingsCollapse">
                        Group Settings
                        <i class="fas fa-chevron-down collapse-toggle"></i>
                    </button>
                    <div class="collapse mt-1" id="groupSettingsCollapse">
                        <div class="list-group list-group-flush">
                            @{
                                var isAdminCookie = Context.Request.Cookies["isAdmin"];
                                var isAdmin = !Model.IsMemberNotAdmin;
                            }

                            @if (isAdmin)
                            {
                                <a href="#" class="list-group-item" id="editGroupSettingsLink" data-group-id="@Model.Group.ID">
                                    <i class="fas fa-cogs me-2"></i> Edit Group Settings
                                </a>
                            }
                            <a class="list-group-item"
                            asp-action="ContributionsIndex" 
                            asp-controller="Contributions" 
                            asp-route-groupId="@Model.Group.ID">
                                <i class="fas fa-hand-holding-usd me-2"></i> View Contributions
                            </a>
                        
                            <a class="list-group-item"
                            asp-action="PayoutIndex"
                            asp-controller="Payouts" 
                            asp-route-groupId="@Model.Group.ID">
                                <i class="fas fa-money-check-alt me-2"></i> View Payouts
                            </a>
                        
                           @if (User.IsInRole("Admin"))
                            {
                                <a href="#" class="list-group-item position-relative" id="reportToggleBtn">
                                    <i class="fas fa-chart-line me-2"></i> Report
                                </a>

                                <!-- Pop-up panel -->
                                <div id="reportPopup" class="card shadow position-absolute bg-white border rounded p-2" style="width: 220px; display: none; z-index: 999;">
                                    <a class="dropdown-item text-dark mb-1" 
                                    asp-action="MemberReport" 
                                    asp-controller="Reports" 
                                    asp-route-groupId="@Model.Group.ID">
                                        <i class="bi bi-person-circle me-2"></i>My Report
                                    </a>
                                @if (isAdmin)
                                    {
                                    
                                    <a class="dropdown-item text-dark" 
                                        asp-action="GroupReport" 
                                    asp-controller="Reports" 
                                        asp-route-groupId="@Model.Group.ID">
                                            <i class="bi bi-bar-chart-line me-2"></i>Group Report
                                        </a>
                                    }
                                </div>
                            }
                            else
                            {
                                <a class="list-group-item" 
                                asp-action="MemberReport" 
                                asp-controller="Reports"
                                asp-route-groupId="@Model.Group.ID">
                                    <i class="fas fa-user-chart me-2"></i> My Report
                                </a>
                            }
                        </div>
                    </div>
                </div>

                <!-- Leave Requests -->
                <div class="mb-2">
                    <button class="btn btn-primary btn-toggle" type="button" data-bs-toggle="collapse" data-bs-target="#leaveRequestsCollapse" aria-expanded="false" aria-controls="leaveRequestsCollapse">
                        Leave Requests
                        <i class="fas fa-chevron-down collapse-toggle"></i>
                    </button>
                    <div class="collapse mt-1" id="leaveRequestsCollapse">
                        <div class="list-group list-group-flush">
                            <a class="list-group-item @(Model.SelectedStatus == "Pending" && Model.RequestType == "Leave" ? "active" : "")"
                               asp-action="LeaveRequests"
                               asp-route-status="Pending"
                               asp-route-groupId="@Model.Group.ID">
                                <i class="fas fa-clock me-2"></i> Pending
                            </a>
                             <a class="list-group-item @(Model.SelectedStatus == "Accepted" && Model.RequestType == "Leave" ? "active" : "")"
                                asp-action="LeaveRequests"
                                asp-route-status="Accepted"
                                asp-route-groupId="@Model.Group.ID">
                                    <i class="fas fa-check-circle me-2"></i> Accepted
                            </a>
                            <a class="list-group-item @(Model.SelectedStatus == "Rejected" && Model.RequestType == "Leave" ? "active" : "")"
                               asp-action="LeaveRequests"
                               asp-route-status="Rejected"
                               asp-route-groupId="@Model.Group.ID">
                                <i class="fas fa-times-circle me-2"></i> Rejected
                            </a>
                        </div>
                    </div>
                </div>
                
              @if (isAdmin)
                {
                    <button type="button" 
                            class="list-group-item list-group-item-action text-danger fw-semibold d-flex align-items-center d-none" 
                            id="closeGroupBtn" 
                            data-group-id="@Model.Group.ID">
                        <i class="fas fa-lock me-2"></i>
                        Close Group @Model.Closed
                    </button>
                }
            
                
                <p  class="list-group-item list-group-item-action text-danger fw-semibold d-flex align-items-center d-none" id="group-closed-status">This group is closed</p>
                
            </div>
          
            <!-- Main Content Area -->
            <div class="col-8 main-content">
                <div id="partial-content-container" class="mb-3"></div>

                <div id="main-request-content">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h2>
                            <i class="fas fa-user-friends"></i>
                            @Model.Group.Name - @Model.SelectedStatus Requests
                        </h2>
                        <span class="badge bg-@(!isAdmin ? "warning" : "success")">
                            @(Model.IsMemberNotAdmin ? "Member View" : "Admin View")
                        </span>
                    </div>

                    @{
                        var isJoin = Model.RequestType == "Join";
                        var requests = isJoin
                            ? Model.Requests?.Cast<object>().ToList()
                            : Model.LeaveRequests?.Cast<object>().ToList();
                    }
                    
                    @if (requests == null || !requests.Any())
                    {
                        <div class="alert alert-info">
                            No @Model.SelectedStatus.ToLower() requests found.
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Member</th>
                                        @if (isJoin)
                                        {
                                            <th>National ID</th>
                                            <th>Gender</th>
                                            <th>Email</th>
                                        }
                                        <th>Date</th>
                                        @if (Model.SelectedStatus == "Pending" && Model.AdminTools && !Model.IsMemberNotAdmin)
                                        {
                                            <th>Actions</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var r in requests)
                                    {
                                        if (isJoin)
                                        {
                                            var request = (JoinRequestView)r;
                                            <tr>
                                                <td>@request.FirstName @request.LastName</td>
                                                <td>@request.NationalID</td>
                                                <td>@request.Gender</td>
                                                <td>@request.Email</td>
                                                <td>@request.RequestedDate.ToString("dd MMM yyyy")</td>
                                                @if (Model.SelectedStatus == "Pending" && Model.AdminTools && !Model.IsMemberNotAdmin)
                                                {
                                                    <td>
                                                        <form asp-controller="Invites" method="post">
                                                            <input type="hidden" name="requestId" value="@request.RequestId" />
                                                            <button type="button" class="btn btn-sm btn-success" onclick="approveRequest(@request.RequestId, this)">Approve</button>
                                                            <button type="button" class="btn btn-sm btn-warning ms-1" onclick="rejectRequest(@request.RequestId, this)">Reject</button>
                                                            <button type="button" class="btn btn-sm btn-danger ms-1" onclick="deleteRequest(@request.RequestId, this)">Delete</button>
                                                        </form>
                                                    </td>
                                                }
                                            </tr>
                                        }
                                        else
                                        {
                                            var request = (LeaveRequestView)r;
                                            <tr>
                                                <td>@request.FirstName @request.LastName</td>
                                                <td>@request.RequestedDate.ToString("dd MMM yyyy")</td>
                                                @if (Model.SelectedStatus == "Pending" && Model.AdminTools && !Model.IsMemberNotAdmin)
                                                {
                                                    <td>
                                                        <form asp-controller="Leave" method="post">
                                                            <input type="hidden" name="requestId" value="@request.RequestId" />
                                                            <button type="button" class="btn btn-sm btn-success" onclick="approveLeaveRequest(@request.RequestId, this)">Approve</button>
                                                            <button type="button" class="btn btn-sm btn-warning ms-1" onclick="rejectLeaveRequest(@request.RequestId, this)">Reject</button>
                                                            <button type="button" class="btn btn-sm btn-danger ms-1" onclick="deleteLeaveRequest(@request.RequestId, this)">Delete</button>
                                                        </form>
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

        <!-- Close Group Confirmation Modal -->
    <div class="modal fade" id="closeGroupModal" tabindex="-1" aria-labelledby="closeGroupModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="closeGroupModalLabel">Confirm Close Group</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            Are you sure you want to close this group?
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
            <button type="button" class="btn btn-danger" id="confirmCloseGroupBtn">Yes, Close Group</button>
        </div>
        </div>
    </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const groupId = @Model.Group.ID; 
            loadGroupStats(groupId);
            loadGroupStatus(groupId);
            setupGroupSettings();
            setupActiveCollapses();
            setupPopupToggle();
            initializeCollapseIcons();
        });

        document.addEventListener("DOMContentLoaded", () => {
        const closeBtn = document.getElementById("closeGroupBtn");
        const confirmBtn = document.getElementById("confirmCloseGroupBtn");
        let groupIdToClose = null;
        const closeModal = new bootstrap.Modal(document.getElementById("closeGroupModal"));

        if (closeBtn && confirmBtn) {
            closeBtn.addEventListener("click", () => {
                groupIdToClose = closeBtn.getAttribute("data-group-id");
                console.log("Group ID to close:", groupIdToClose);
                closeModal.show();
            });

            confirmBtn.addEventListener("click", () => {
                if (!groupIdToClose) return;

                fetch("/Groups/DeactivateGroup", {
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: `groupId=${encodeURIComponent(groupIdToClose)}`
                })
                .then(res => res.json())
                .then(data => {
                    closeModal.hide();
                    if (data.success) {
                        //alert(data.message);
                        // Optionally reload page or update UI
                        location.reload();
                    } else {
                        alert(data.message || "Failed to close group.");
                    }
                })
                .catch(err => {
                    closeModal.hide();
                    console.error(err);
                    alert("Unexpected error while closing group.");
                });
            });
        }
    });

        //catch update 
        document.addEventListener("submit", function (event) {
        if (event.target && event.target.id === "updateGroupForm") {
            event.preventDefault();
            console.log("Form submitted from partial!");

            const form = event.target;
            const formData = new FormData(form);

            fetch(form.action, {
                method: "POST",
                body: formData
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    document.getElementById("success-alert").classList.remove("d-none");
                } else {
                    document.getElementById("error-alert").classList.remove("d-none");
                }
            })
            .catch(err => {
                console.error("Error:", err);
                document.getElementById("error-alert").classList.remove("d-none");
            });
        }
    });

        // Initialize collapse icons
        function initializeCollapseIcons() {
            document.querySelectorAll('[data-bs-toggle="collapse"]').forEach(button => {
                const target = button.getAttribute('data-bs-target');
                const collapseElement = document.querySelector(target);
                
                if (collapseElement.classList.contains('show')) {
                    button.querySelector('.collapse-toggle').classList.add('fa-chevron-up');
                    button.querySelector('.collapse-toggle').classList.remove('fa-chevron-down');
                }
                
                collapseElement.addEventListener('show.bs.collapse', function () {
                    button.querySelector('.collapse-toggle').classList.add('fa-chevron-up');
                    button.querySelector('.collapse-toggle').classList.remove('fa-chevron-down');
                });
                
                collapseElement.addEventListener('hide.bs.collapse', function () {
                    button.querySelector('.collapse-toggle').classList.remove('fa-chevron-up');
                    button.querySelector('.collapse-toggle').classList.add('fa-chevron-down');
                });
            });
        }

        function loadGroupStats(groupId) {
            fetch(`/Invites/GroupStats/${groupId}`)
                .then(res => res.ok ? res.json() : Promise.reject("Failed to load stats"))
                .then(data => {
                    const stats = document.getElementById('group-stats');
                    const progressBar = document.getElementById('MemberLimit');
                    if (stats && progressBar && data.memberCount !== undefined && data.memberLimit !== undefined) {
                        const percent = Math.round((data.memberCount / data.memberLimit) * 100);
                        stats.textContent = `Member Count ${data.memberCount}/${data.memberLimit}`;
                        progressBar.style.width = percent + "%";
                        progressBar.textContent = percent + "%";
                    }
                })
                .catch(err => {
                    console.error(err);
                    const stats = document.getElementById('group-stats');
                    if (stats) stats.textContent = "Error loading stats";
                });
        }

            // -------------------- Load Group Status --------------------
            function loadGroupStatus(groupId) {
                fetch(`/Groups/GroupStatus/${groupId}`)
                    .then(res => res.ok ? res.json() : Promise.reject("Failed to load status"))
                    .then(data => {
                        const statusElement = document.getElementById('group-closed-status');
                        const closeBtn = document.getElementById('closeGroupBtn');

                        if (data.closed) {
                            // Show the "closed" paragraph
                            if (statusElement) statusElement.classList.remove('d-none');
                            // Hide the button
                            if (closeBtn) closeBtn.classList.add('d-none');
                        } else {
                            // Show the button
                            if (closeBtn) closeBtn.classList.remove('d-none');
                            // Hide the "closed" paragraph
                            if (statusElement) statusElement.classList.add('d-none');
                        }
                    })
                    .catch(err => {
                        console.error(err);
                        const statusElement = document.getElementById('group-closed-status');
                        if (statusElement) {
                            statusElement.textContent = "Error loading status";
                            statusElement.classList.remove('d-none');
                        }
                    });
            }



        // -------------------- Setup collapses for active item --------------------
        function setupActiveCollapses() {
            const activeItem = document.querySelector('.list-group-item.active');
            if (!activeItem) return;

            const collapseDiv = activeItem.closest('.collapse');
            if (collapseDiv) {
                const bsCollapse = new bootstrap.Collapse(collapseDiv, { show: true });
                
                const toggleBtn = document.querySelector(`[data-bs-target="#${collapseDiv.id}"]`);
                if (toggleBtn) {
                    toggleBtn.setAttribute('aria-expanded', 'true');
                    toggleBtn.querySelector('.collapse-toggle').classList.add('fa-chevron-up');
                    toggleBtn.querySelector('.collapse-toggle').classList.remove('fa-chevron-down');
                }
            }
        }

        function setupGroupSettings() {
            const editLink = document.getElementById("editGroupSettingsLink");
            const container = document.getElementById("partial-content-container");
            const mainContent = document.getElementById("main-request-content");

            if (editLink && container && mainContent) {
                editLink.addEventListener("click", (e) => {
                    e.preventDefault();
                    const groupId = editLink.getAttribute("data-group-id");
                    mainContent.style.display = "none";

                    fetch(`/Groups/UpdateGroupPartial?groupId=${groupId}`)
                        .then(res => res.ok ? res.text() : Promise.reject("Failed to load partial"))
                        .then(html => {
                            container.innerHTML = html;
                            container.style.display = 'block';
                        })
                        .catch(err => container.innerHTML = `<div class="alert alert-danger">Error: ${err}</div>`);
                });
            }
        }

        function setupPopupToggle() {
            const reportBtn = document.getElementById('reportToggleBtn');
            const popup = document.getElementById('reportPopup');
            
            if (!reportBtn || !popup) return;

            reportBtn.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                
                if (popup.style.display === 'block') {
                    popup.style.display = 'none';
                } else {
                    popup.style.display = 'block';
                }
            });

            document.addEventListener('click', (e) => {
                if (!popup.contains(e.target) && e.target !== reportBtn) {
                    popup.style.display = 'none';
                }
            });

            popup.querySelectorAll('.dropdown-item').forEach(item => {
                item.addEventListener('click', (e) => e.stopPropagation());
            });
        }

        function handleRequestAction(url, requestId, button, method = 'POST', confirmMsg = null) {
            if (confirmMsg && !confirm(confirmMsg)) return;

            fetch(`${url}${requestId}`, {
                method: method,
                headers: { 'Content-Type': 'application/json' }
            })
            .then(res => {
                if (res.ok) {
                    const row = button.closest('tr');
                    if (row) row.remove();
                    alert("Action completed successfully.");
                } else {
                    res.text().then(text => alert("Failed: " + text));
                }
            })
            .catch(err => alert("Error: " + err.message));
        }

        // Global functions for buttons
        function approveRequest(requestId, btn) { handleRequestAction(`/Invites/AcceptJoinRequest/`, requestId, btn); }
        function rejectRequest(requestId, btn) { handleRequestAction(`/Invites/RejectJoinRequest/`, requestId, btn); }
        function deleteRequest(requestId, btn) { handleRequestAction(`/Invites/DeleteJoinRequest/`, requestId, btn, 'POST', "Delete this request?"); }

        function approveLeaveRequest(requestId, btn) { handleRequestAction(`/Leave/ApproveLeaveRequest?requestId=`, requestId, btn); }
        function rejectLeaveRequest(requestId, btn) { handleRequestAction(`/Leave/RejectLeaveRequest?requestId=`, requestId, btn); }
        function deleteLeaveRequest(requestId, btn) { handleRequestAction(`/Leave/DeleteLeaveRequest?requestId=`, requestId, btn, 'DELETE', "Delete this leave request?"); }
    </script>
</body>
</html>