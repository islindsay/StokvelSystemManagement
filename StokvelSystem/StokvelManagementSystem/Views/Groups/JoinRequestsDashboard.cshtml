@model DashboardModel
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>@Model.Group.Name - Stokvel Management System</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link rel="stylesheet" href="~/css/Sidebar.css" />
   
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="sidebar col-4">
                <div class="sidebar-header mb-4">
                    <h4>INFORMATION DASHBOARD</h4>
                </div>

                <!-- Member Count -->
                <h9 id="group-stats">Loading stats...</h9>

                <div class="progress mb-4">
                    <div class="progress-bar progress-bar-striped bg-success" style="width: 0%;" id="MemberLimit"></div>
                </div>


                <!-- Join Requests -->
                <div class="mb-2">
                    <button class="btn btn-primary btn-toggle" type="button" data-bs-toggle="collapse" data-bs-target="#joinRequestsCollapse">
                        Join Requests 
                        <i class="fas fa-chevron-down collapse-toggle"></i>
                    </button>
                    <div class="collapse mt-1" id="joinRequestsCollapse">
                        <div class="list-group list-group-flush">
                           <a class="list-group-item @(Model.SelectedStatus == "Pending" && Model.RequestType == "Join" ? "active" : "")"
                               asp-action="JoinRequestsDashboard"
                               asp-route-status="Pending"
                               asp-route-groupId="@Model.Group.ID">
                               <i class="fas fa-clock me-2"></i> Pending
                            </a>
                            <a class="list-group-item @(Model.SelectedStatus == "Accepted" && Model.RequestType == "Join" ? "active" : "")"
                               asp-action="JoinRequestsDashboard"
                               asp-route-status="Accepted"
                               asp-route-groupId="@Model.Group.ID">
                                <i class="fas fa-check-circle me-2"></i> Accepted
                            </a>
                            <a class="list-group-item @(Model.SelectedStatus == "Rejected" && Model.RequestType == "Join" ? "active" : "")"
                               asp-action="JoinRequestsDashboard"
                               asp-route-status="Rejected"
                               asp-route-groupId="@Model.Group.ID">
                                <i class="fas fa-times-circle me-2"></i> Rejected
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Group Settings -->
                    <div class="mb-2">
                        <button class="btn btn-primary btn-toggle" type="button" data-bs-toggle="collapse" data-bs-target="#groupSettingsCollapse">
                            Group Settings
                            <i class="fas fa-chevron-down collapse-toggle" ></i>
                        </button>
                        <div class="collapse mt-1" id="groupSettingsCollapse">
                            <div class="list-group list-group-flush">

                                @{
                                    var isAdminCookie = Context.Request.Cookies["isAdmin"];
                                    var isAdmin = !Model.IsMemberNotAdmin;
                                }


                                @if (isAdmin)
                                {
                                    <a href="#" class="list-group-item" id="editGroupSettingsLink" data-group-id="@Model.Group.ID">
                                        <i class="fas fa-cogs me-2"></i> Edit Group Settings
                                    </a>
                                }
                                <a class="list-group-item"
                                asp-action="ContributionsIndex" 
                                asp-controller="Contributions" 
                                asp-route-groupId="@Model.Group.ID">
                                    <i class="fas fa-hand-holding-usd me-2"></i> View Contributions
                                </a>
                            
                                <a class="list-group-item"
                                asp-action="PayoutIndex"
                                asp-controller="Payouts" 
                                asp-route-groupId="@Model.Group.ID">
                                    <i class="fas fa-money-check-alt me-2"></i> View Payouts
                                </a>
                            
                               @if (User.IsInRole("Admin"))
                                {
                                    <a href="#" class="list-group-item position-relative" onclick="toggleReportPopup(event)">
                                        <i class="fas fa-chart-line me-2"></i> Report
                                </a>

                                <!-- Pop-up panel -->
                                <div id="reportPopup" class="card shadow position-absolute bg-white border rounded p-2" style="width: 220px; display: none; z-index: 999;">
                                    <a class="dropdown-item text-dark mb-1" 
                                    asp-action="MemberReport" 
                                    asp-controller="Reports" 
                                    asp-route-groupId="@Model.Group.ID">
                                        <i class="bi bi-person-circle me-2"></i>My Report
                                    </a>
                                @if (isAdmin)
                                    {
                                    
                                    <a class="dropdown-item text-dark" 
                                        asp-action="GroupReport" 
                                    asp-controller="Reports" 
                                        asp-route-groupId="@Model.Group.ID">
                                            <i class="bi bi-bar-chart-line me-2"></i>Group Report
                                        </a>
                                    }
                                    </div>
                            }
                                else
                                {
                                    <a class="list-group-item" 
                                    asp-action="MemberReport" 
                                    asp-controller="Reports"
                                    asp-route-groupId="@Model.Group.ID">
                                        <i class="fas fa-user-chart me-2"></i> My Report
                                    </a>
                                }
    
                        </div>
                        </div>
                </div>

                <!-- Leave Requests -->
                <div class="mb-2">
                    <button class="btn btn-primary btn-toggle" type="button" data-bs-toggle="collapse" data-bs-target="#leaveRequestsCollapse">
                        Leave Requests
                        <i class="fas fa-chevron-down collapse-toggle"></i>
                    </button>
                    <div class="collapse mt-1" id="leaveRequestsCollapse">
                        <div class="list-group list-group-flush">
                          
                  
                              
                               <a class="list-group-item @(Model.SelectedStatus == "Pending" && Model.RequestType == "Leave" ? "active" : "")"

                                   asp-action="LeaveRequests"
                                   asp-route-status="Pending"
                                   asp-route-groupId="@Model.Group.ID">
                                    <i class="fas fa-clock me-2"></i> Pending
                                </a>
                                 <a class="list-group-item @(Model.SelectedStatus == "Accepted" && Model.RequestType == "Leave" ? "active" : "")"
                                    asp-action="LeaveRequests"
                                    asp-route-status="Accepted"
                                    asp-route-groupId="@Model.Group.ID">
                                        <i class="fas fa-check-circle me-2"></i> Accepted
                                </a>
                                <a class="list-group-item @(Model.SelectedStatus == "Rejected" && Model.RequestType == "Leave" ? "active" : "")"
                                   asp-action="LeaveRequests"
                                   asp-route-status="Rejected"
                                   asp-route-groupId="@Model.Group.ID">
                                    <i class="fas fa-times-circle me-2"></i> Rejected
                                </a>
            
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content Area -->

        <div class="col-8 main-content">
            <div id="partial-content-container" class="mb-3"></div>

            <div id="main-request-content">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h2>
                            <i class="fas fa-user-friends"></i>
                            @Model.Group.Name - @Model.SelectedStatus Requests
                        </h2>
                        <span class="badge bg-@(!isAdmin ? "warning" : "success")">
                            @(Model.IsMemberNotAdmin ? "Member View" : "Admin View")
                        </span>
                    </div>

                    @{
                        var isJoin = Model.RequestType == "Join";
                        var requests = isJoin
                            ? Model.Requests?.Cast<object>().ToList()
                            : Model.LeaveRequests?.Cast<object>().ToList();
                    }
                    @if (requests == null || !requests.Any())
                        {
                            <div class="alert alert-info">
                                No @Model.SelectedStatus.ToLower() requests found.
                            </div>
                        }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-striped">
                                        <thead>
                                                <tr>
                                                    <th>Member</th>
                                                    @if (isJoin)
                                                    {
                                                        <th>National ID</th>
                                                        <th>Gender</th>
                                                        <th>Email</th>
                                                       
                                                    }
                                                    <th>Date</th>
                                                    @if (Model.SelectedStatus == "Pending" && Model.AdminTools && !Model.IsMemberNotAdmin)
                                                    {
                                                        <th>Actions</th>
                                                    }
                                                </tr>
                                            </thead>
                                <tbody>

                                    @foreach (var r in requests)
                                            {
                                                if (isJoin)
                                                {
                                                    var request = (JoinRequestView)r;
                                                    <tr>
                                                        <td>@request.FirstName @request.LastName</td>
                                                        <td>@request.NationalID</td>
                                                        <td>@request.Gender</td>
                                                        <td>@request.Email</td>
                                                        <td>@request.RequestedDate.ToString("dd MMM yyyy")</td>
                                                        @if (Model.SelectedStatus == "Pending" && Model.AdminTools && !Model.IsMemberNotAdmin)
                                                        {
                                                            <td>
                                                                <form asp-controller="Invites" method="post">
                                                                    <input type="hidden" name="requestId" value="@request.RequestId" />
                                                                    <button type="button" class="btn btn-sm btn-success" onclick="approveRequest(@request.RequestId, this)">Approve</button>
                                                                    <button type="button" class="btn btn-sm btn-warning ms-1" onclick="rejectRequest(@request.RequestId, this)">Reject</button>
                                                                    <button type="button" class="btn btn-sm btn-danger ms-1" onclick="deleteRequest(@request.RequestId, this)">Delete</button>
                                                                </form>
                                                            </td>
                                                        }
                                                    </tr>
                                                }
                                                else
                                                {
                                                    var request = (LeaveRequestView)r;
                                                    <tr>
                                                        <td>@request.FirstName @request.LastName</td>
                                                        <td>@request.RequestedDate.ToString("dd MMM yyyy")</td>
                                                        @if (Model.SelectedStatus == "Pending" && Model.AdminTools && !Model.IsMemberNotAdmin)
                                                        {
                                                            <td>
                                                                <form asp-controller="Leave" method="post">
                                                                    <input type="hidden" name="requestId" value="@request.RequestId" />
                                                                    <button type="button" class="btn btn-sm btn-success" onclick="approveLeaveRequest(@request.RequestId, this)">Approve</button>
                                                                    <button type="button" class="btn btn-sm btn-warning ms-1" onclick="rejectLeaveRequest(@request.RequestId, this)">Reject</button>
                                                                    <button type="button" class="btn btn-sm btn-danger ms-1" onclick="deleteLeaveRequest(@request.RequestId, this)">Delete</button>
                                                                </form>
                                                            </td>
                                                        }
                                                    </tr>
                                                }
                                            }
                                </tbody>
                            </table>
                        </div>
                    }

            </div>
        </div>
    </div>
    </div>

   
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>


        document.addEventListener("DOMContentLoaded", function () {
            const groupId = @Model.Group.ID; 
            loadGroupStats(groupId);
            groupSettings();
        });

            

          
            document.addEventListener('DOMContentLoaded', () => {
                const activeItem = document.querySelector('.list-group-item.active');
                if (activeItem) {
                    const collapseId = activeItem.closest('.collapse').id;
                    const toggleBtn = document.querySelector(`[data-bs-target="#${collapseId}"]`);
                    new bootstrap.Collapse(document.getElementById(collapseId), { toggle: true });
                    toggleBtn.setAttribute('aria-expanded', 'true');
                }
            });

            function approveRequest(requestId, button) {
                fetch(`/Invites/AcceptJoinRequest/${requestId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => {
                    if (response.ok) {
                        alert("Request approved successfully.");
                        // Remove the row containing the clicked button
                        const row = button.closest('tr');
                        if (row) row.remove();
                    } else {
                        alert("Failed to approve request.");
                    }
                })
                .catch(error => {
                    alert("Error: " + error.message);
                });
            }

            function approveLeaveRequest(requestId, button) {
                fetch(`/Leave/ApproveLeaveRequest?requestId=${requestId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => {
                    if (response.ok) {
                        alert("Request approved successfully.");
                        const row = button.closest('tr');
                        if (row) row.remove(); // remove row from table
                    } else {
                        response.text().then(text => alert("Failed: " + text));
                    }
                })
                .catch(error => {
                    alert("Error: " + error.message);
                });
            }


            function deleteRequest(requestId, button) {
                fetch(`/Invites/DeleteJoinRequest/${requestId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => {
                    if (response.ok) {
                        alert("Request deleted successfully.");
                        // Remove the row containing the clicked button
                        const row = button.closest('tr');
                        if (row) row.remove();
                    } else {
                        alert("Failed to approve request.");
                    }
                })
                .catch(error => {
                    alert("Error: " + error.message);
                });
            }

            function deleteLeaveRequest(requestId, button) {
                if (!confirm("Are you sure you want to delete this pending request?")) return;

                fetch(`/Leave/DeleteLeaveRequest?requestId=${requestId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => {
                    if (response.ok) {
                        alert("Request deleted successfully.");
                        const row = button.closest('tr');
                        if (row) row.remove();
                    } else {
                        response.text().then(text => alert("Failed: " + text));
                    }
                })
                .catch(error => {
                    alert("Error: " + error.message);
                });
            }


            function rejectRequest(requestId, button) {
                fetch(`/Invites/RejectJoinRequest/${requestId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => {
                    if (response.ok) {
                        alert("Request Denied.");
                      
                        const row = button.closest('tr');
                        if (row) row.remove();
                    } else {
                        alert("Failed to approve request.");
                    }
                })
                .catch(error => {
                    alert("Error: " + error.message);
                });
            }

            function rejectLeaveRequest(requestId, button) {
                fetch(`/Leave/RejectLeaveRequest?requestId=${requestId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => {
                    if (response.ok) {
                        alert("Request rejected successfully.");
                        const row = button.closest('tr');
                        if (row) row.remove();
                    } else {
                        response.text().then(text => alert("Failed: " + text));
                    }
                })
                .catch(error => {
                    alert("Error: " + error.message);
                });
            }

            
            function loadGroupStats(groupId) {
                fetch(`/Invites/GroupStats/${groupId}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error("Network response was not ok");
                        }
                        return response.json();
                    })
                    .then(data => {
                        const statsElement = document.getElementById('group-stats');
                        const progressBar = document.getElementById('MemberLimit');

                        if (data.memberCount !== undefined && data.memberLimit !== undefined) {
                            const count = data.memberCount;
                            const limit = data.memberLimit;
                            const percent = Math.round((count / limit) * 100);

                            // Update the h9 text
                            if (statsElement) {
                                statsElement.textContent = `Member Count ${count}/${limit}`;
                            }

                            // Update the progress bar fill and text
                            if (progressBar) {
                                progressBar.style.width = percent + "%";
                                progressBar.textContent = percent + "%";
                            }
                        }
                    })
                    .catch(error => {
                        console.error("Failed to load group stats:", error);
                        const statsElement = document.getElementById('group-stats');
                        if (statsElement) statsElement.textContent = "Error loading stats";
                    });
            }

             //This is for theAdmin report pop up
             function toggleReportPopup(e) {
                e.preventDefault();
                const popup = document.getElementById('reportPopup');
                const rect = e.target.getBoundingClientRect();
                popup.style.top = `${rect.bottom + window.scrollY}px`;
                popup.style.left = `${rect.left}px`;
                popup.style.display = popup.style.display === 'none' ? 'block' : 'none';
                document.addEventListener('click', function handler(evt) {
                    if (!popup.contains(evt.target) && evt.target !== e.target) {
                        popup.style.display = 'none';
                        document.removeEventListener('click', handler);
                    }
                });
    }

            function groupSettings() {
                const editLink = document.getElementById("editGroupSettingsLink");
                const container = document.getElementById("partial-content-container");
                const mainContent = document.getElementById("main-request-content");

                if (editLink && container && mainContent) {
                    editLink.addEventListener("click", function (e) {
                        e.preventDefault();

                        const groupId = editLink.getAttribute("data-group-id");

                        mainContent.style.display = "none";

                        fetch(`/Groups/UpdateGroupPartial?groupId=${groupId}`)
                            .then(response => {
                                if (!response.ok) throw new Error("Failed to load partial.");
                                return response.text();
                            })
                            .then(html => {
                                container.innerHTML = html;
                            })
                            .catch(error => {
                                container.innerHTML = `<div class="alert alert-danger">Error: ${error.message}</div>`;
                            });
                    });
                }
            }
    </script>
</body>
</html>
